name       : android-tools
version    : 29.0.4
release    : 3
source     :
    - git|https://android.googlesource.com/platform/system/core : platform-tools-29.0.4
    - git|https://android.googlesource.com/platform/system/extras : platform-tools-29.0.4
    - git|https://android.googlesource.com/platform/system/tools/mkbootimg : platform-tools-29.0.4
    - git|https://android.googlesource.com/platform/external/f2fs-tools : platform-tools-29.0.4
    - git|https://android.googlesource.com/platform/external/e2fsprogs : platform-tools-29.0.4
    - git|https://android.googlesource.com/platform/external/avb : platform-tools-29.0.4
    # https://android.googlesource.com/platform/external/boringssl/+/platform-tools-29.0.4/BORINGSSL_REVISION
    - git|https://boringssl.googlesource.com/boringssl : c9827e073f64e353c4891ecc2c73721882543ee0
extract    : no
license    : Apache-2.0
homepage   : https://developer.android.com/studio/releases/platform-tools
summary    : Android development tools (adb and fastboot)
component  : programming.tools
description: |
    Android development tools, this includes adb (android debug bridge) and fastboot (diagnostic protocol for androids fastboot bootloader)
clang      : yes
builddeps  :
    - pkgconfig(libselinux)
    - pkgconfig(libsepol)
    - pkgconfig(libpcre2-8)
    - pkgconfig(libusb-1.0)
    - golang
    - gtest-devel
    - ruby
environment: |
    export PLATFORM_TOOLS_VERSION=%version%
setup      : |
    # Make src dir and enter it
    mkdir -p src && cd src
    
    # Copy sources
    for src in $sources/*.git ; do
        git_dir=${src#$sources/}
        cp -r "$src" "${git_dir%.git}"
    done

    # Patch the sources so they can build on Solus
    %patch -p1 < $pkgfiles/fix_build_core.patch -d core
    sed -i 's|/usr/bin/env python$|/usr/bin/env python2|g' avb/avbtool
    sed -i 's|/usr/bin/env python$|/usr/bin/env python2|g' mkbootimg/mkbootimg.py
    sed -i 's|/usr/bin/env python$|/usr/bin/env python2|g' mkbootimg/unpack_bootimg.py

    # Generate ninja build files
    $pkgfiles/generate_build.rb > build.ninja
    mkdir -p boringssl/build && cd boringssl/build && cmake -GNinja ..
build      : |
    ninja %JOBS% -C boringssl/build
    ninja %JOBS%
install    : |
    install -Dm00755 -t $installdir/usr/bin adb fastboot mke2fs.android e2fsdroid ext2simg avb/avbtool
    install -Dm00755 mkbootimg/mkbootimg.py $installdir/usr/bin/mkbootimg
    install -Dm00755 mkbootimg/unpack_bootimg.py $installdir/usr/bin/unpack_bootimg
